diff -up a/dwm.c b/dwm.c
--- a/dwm.c	2013-09-09 23:57:07.980063479 +0200
+++ b/dwm.c	2013-09-14 17:47:58.020724811 +0200
@@ -61,7 +61,8 @@ enum { CurNormal, CurResize, CurMove, Cu
 enum { ColBorder, ColFG, ColBG, ColLast };              /* color */
 enum { NetSupported, NetWMName, NetWMState,
        NetWMFullscreen, NetActiveWindow, NetWMWindowType,
-       NetWMWindowTypeDialog, NetLast };     /* EWMH atoms */
+       NetWMWindowTypeDialog, NetCurrentTagMask,
+       NetClientTagMask, NetLast };     /* EWMH atoms */
 enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; /* default atoms */
 enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,
        ClkClientWin, ClkRootWin, ClkLast };             /* clicks */
@@ -1221,6 +1222,8 @@ manage(Window w, XWindowAttributes *wa)
 	c->mon->sel = c;
 	arrange(c->mon);
 	XMapWindow(dpy, c->win);
+    XChangeProperty(dpy, c->win, netatom[NetClientTagMask], XA_CARDINAL, 32,
+        PropModeReplace, (unsigned char *) &c->tags, 1);
 	focus(NULL);
 }
 
@@ -1676,6 +1679,8 @@ setup(void) {
 	netatom[NetWMFullscreen] = XInternAtom(dpy, "_NET_WM_STATE_FULLSCREEN", False);
 	netatom[NetWMWindowType] = XInternAtom(dpy, "_NET_WM_WINDOW_TYPE", False);
 	netatom[NetWMWindowTypeDialog] = XInternAtom(dpy, "_NET_WM_WINDOW_TYPE_DIALOG", False);
+    netatom[NetCurrentTagMask] = XInternAtom(dpy, "_NET_CURRENT_TAG_MASK", False);
+    netatom[NetClientTagMask] = XInternAtom(dpy, "_NET_CLIENT_TAG_MASK", False);
 	/* init cursors */
 	cursor[CurNormal] = XCreateFontCursor(dpy, XC_left_ptr);
 	cursor[CurResize] = XCreateFontCursor(dpy, XC_sizing);
@@ -1697,6 +1702,8 @@ setup(void) {
 	/* EWMH support per view */
 	XChangeProperty(dpy, root, netatom[NetSupported], XA_ATOM, 32,
 			PropModeReplace, (unsigned char *) netatom, NetLast);
+    XChangeProperty(dpy, root, netatom[NetCurrentTagMask], XA_CARDINAL, 32,
+            PropModeReplace, (unsigned char *) &selmon->tagset[selmon->seltags], 1);
 	/* select for events */
 	wa.cursor = cursor[CurNormal];
 	wa.event_mask = SubstructureRedirectMask|SubstructureNotifyMask|ButtonPressMask|PointerMotionMask
@@ -1746,6 +1753,8 @@ void
 tag(const Arg *arg) {
 	if(selmon->sel && arg->ui & TAGMASK) {
 		selmon->sel->tags = arg->ui & TAGMASK;
+        XChangeProperty(dpy, selmon->sel->win, netatom[NetClientTagMask], XA_CARDINAL, 32,
+            PropModeReplace, (unsigned char *) &selmon->sel->tags, 1);
 		focus(NULL);
 		arrange(selmon);
 	}
@@ -1862,6 +1871,8 @@ toggletag(const Arg *arg) {
 	newtags = selmon->sel->tags ^ (arg->ui & TAGMASK);
 	if(newtags) {
 		selmon->sel->tags = newtags;
+        XChangeProperty(dpy, selmon->sel->win, netatom[NetClientTagMask], XA_CARDINAL, 32,
+            PropModeReplace, (unsigned char *) &selmon->sel->tags, 1);
 		focus(NULL);
 		arrange(selmon);
 	}
@@ -1895,6 +1906,8 @@ toggleview(const Arg *arg) {
 			togglebar(NULL);
 		focus(NULL);
 		arrange(selmon);
+        XChangeProperty(dpy, root, netatom[NetCurrentTagMask], XA_CARDINAL, 32,
+            PropModeReplace, (unsigned char *) &selmon->tagset[selmon->seltags], 1);
 	}
 }
 
@@ -2199,6 +2212,8 @@ view(const Arg *arg) {
 		togglebar(NULL);
 	focus(NULL);
 	arrange(selmon);
+    XChangeProperty(dpy, root, netatom[NetCurrentTagMask], XA_CARDINAL, 32,
+        PropModeReplace, (unsigned char *) &selmon->tagset[selmon->seltags], 1);
 }
 
 Client *
